user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;
    client_max_body_size 100M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    upstream app {
        server ${APP_HOST}:${APP_PORT};
    }

    server {
        listen 80;
        server_name ${SERVER_NAME};
        charset utf-8;

        # Static files (including Django admin static files)
        location /static/ {
            alias /var/www/app/static/;
            expires 30d;
            add_header Cache-Control "public, immutable";

            # Ensure admin static files are served correctly
            try_files $uri $uri/ =404;
        }

        # Media files
        location /media/ {
            alias /var/www/app/media/;
            expires 7d;
            add_header Cache-Control "public";
        }

        # Proxy all other requests to Django (including admin)
        location / {
            proxy_pass http://app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_redirect off;

            # WebSocket support (if needed for HTMX SSE/WS)
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }

    # HTTPS server (uncomment and configure when SSL certificates are available)
    # server {
    #     listen 443 ssl;
    #     server_name ${SERVER_NAME};
    #     charset utf-8;
    #
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #
    #     # Same location blocks as above
    #     location /static/ {
    #         alias /var/www/app/static/;
    #     }
    #     location /media/ {
    #         alias /var/www/app/media/;
    #     }
    #     location / {
    #         proxy_pass http://app;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }
    # }
}
